services:
  reportingdb:
    image: postgres:16.3
    environment:
      POSTGRES_USER: ${REPORTING_POSTGRES_USER}
      POSTGRES_PASSWORD: ${REPORTING_POSTGRES_PASSWORD}
      POSTGRES_DB: ${REPORTING_POSTGRES_DB}
      POSTGRES_PORT: ${REPORTING_POSTGRES_PORT}
      PGPORT: ${REPORTING_POSTGRES_PORT}
    healthcheck:
      test: pg_isready -U ${REPORTING_POSTGRES_USER} -d ${REPORTING_POSTGRES_DB}
      start_period: 10s
      retries: 3
      interval: 10s

  reporting:
    depends_on:
      reportingdb:
        condition: service_healthy
      gatekeeper:
        condition: service_healthy
    image: ghcr.io/agstack/openagri-reportingservice:latest
    command: /code/entrypoint.sh ${REPORTING_SERVICE_PORT}
    environment:
      REPORTING_POSTGRES_HOST: ${REPORTING_POSTGRES_HOST}
      REPORTING_POSTGRES_USER: ${REPORTING_POSTGRES_USER}
      REPORTING_POSTGRES_PASSWORD: ${REPORTING_POSTGRES_PASSWORD}
      REPORTING_POSTGRES_DB: ${REPORTING_POSTGRES_DB}
      REPORTING_POSTGRES_PORT: ${REPORTING_POSTGRES_PORT}
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME}
      JWT_SIGNING_KEY: ${JWT_SIGNING_KEY}
      REPORTING_SERVICE_NAME: ${REPORTING_SERVICE_NAME}
      REPORTING_SERVICE_PORT: ${REPORTING_SERVICE_PORT}
      REPORTING_USING_GATEKEEPER: ${REPORTING_USING_GATEKEEPER}
      REPORTING_GATEKEEPER_BASE_URL: ${INTERNAL_GK_URL}
      REPORTING_GATEKEEPER_USERNAME: ${GATEKEEPER_SUPERUSER_USERNAME}
      REPORTING_GATEKEEPER_PASSWORD: ${GATEKEEPER_SUPERUSER_PASSWORD}
      REPORTING_BACKEND_CORS_ORIGINS: ${REPORTING_BACKEND_CORS_ORIGINS}
